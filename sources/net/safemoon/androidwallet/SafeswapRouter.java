package net.safemoon.androidwallet;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.Utils;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.generated.Uint256;

public class SafeswapRouter extends gt0 {

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$1 */
    class C80981 extends TypeReference<Address> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$13 */
    class C810013 extends TypeReference<Uint256> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$2 */
    class C81012 extends TypeReference<Bool> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$3 */
    class C81023 extends TypeReference<Bool> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$4 */
    class C81034 extends TypeReference<Address> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$5 */
    class C81045 extends TypeReference<Address> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$6 */
    class C81056 extends TypeReference<Address> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$7 */
    class C81067 extends TypeReference<Uint256> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$8 */
    class C81078 extends TypeReference<Uint256> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$9 */
    class C81089 extends TypeReference<DynamicArray<Uint256>> {
    }

    /* renamed from: net.safemoon.androidwallet.SafeswapRouter$a */
    public class C8109a implements Callable<List> {

        /* renamed from: a */
        public final /* synthetic */ gd2 f41218a;

        public C8109a(gd2 gd2) {
            this.f41218a = gd2;
        }

        /* renamed from: a */
        public List call() throws Exception {
            return gt0.convertToNative((List) SafeswapRouter.this.lambda$executeRemoteCallSingleValueReturn$1(this.f41218a, List.class));
        }
    }

    public SafeswapRouter(String str, vj7 vj7, cw0 cw0, it0 it0) {
        super("", str, vj7, cw0, it0);
    }

    /* renamed from: q */
    public static SafeswapRouter m64687q(String str, vj7 vj7, cw0 cw0, it0 it0) {
        return new SafeswapRouter(str, vj7, cw0, it0);
    }

    /* renamed from: A */
    public qt6 mo56503A(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, BigInteger.ZERO, xd2.encode(new gd2("swapExactTokensForETHSupportingFeeOnTransferTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList())));
    }

    /* renamed from: B */
    public rc5<au6> mo56504B(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3) {
        Class<Address> cls = Address.class;
        return executeRemoteCallTransaction(new gd2("swapExactTokensForTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList()));
    }

    /* renamed from: C */
    public qt6 mo56505C(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, BigInteger.ZERO, xd2.encode(new gd2("swapExactTokensForTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList())));
    }

    /* renamed from: D */
    public rc5<au6> mo56506D(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3) {
        Class<Address> cls = Address.class;
        return executeRemoteCallTransaction(new gd2("swapExactTokensForTokensSupportingFeeOnTransferTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList()));
    }

    /* renamed from: E */
    public qt6 mo56507E(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, BigInteger.ZERO, xd2.encode(new gd2("swapExactTokensForTokensSupportingFeeOnTransferTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList())));
    }

    /* renamed from: F */
    public rc5<au6> mo56508F(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3) {
        Class<Address> cls = Address.class;
        return executeRemoteCallTransaction(new gd2("swapTokensForExactETH", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList()));
    }

    /* renamed from: G */
    public qt6 mo56509G(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, BigInteger.ZERO, xd2.encode(new gd2("swapTokensForExactETH", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList())));
    }

    /* renamed from: H */
    public rc5<au6> mo56510H(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3) {
        Class<Address> cls = Address.class;
        return executeRemoteCallTransaction(new gd2("swapTokensForExactTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList()));
    }

    /* renamed from: I */
    public qt6 mo56511I(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, BigInteger.ZERO, xd2.encode(new gd2("swapTokensForExactTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList())));
    }

    /* renamed from: p */
    public rc5<List> mo56512p(BigInteger bigInteger, List<String> list) {
        Class<Address> cls = Address.class;
        gd2 gd2 = new gd2("getAmountsOut", Arrays.asList(new fz6[]{new Uint256(bigInteger), new DynamicArray(cls, Utils.typeMap(list, cls))}), Arrays.asList(new TypeReference[]{new TypeReference<DynamicArray<Uint256>>() {
        }}));
        return new rc5<>(gd2, new C8109a(gd2));
    }

    /* renamed from: r */
    public qt6 mo56513r(BigInteger bigInteger, List<String> list, String str, BigInteger bigInteger2, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, bigInteger4, xd2.encode(new gd2("swapETHForExactTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger2)}), Collections.emptyList())));
    }

    /* renamed from: s */
    public h75 mo56514s(BigInteger bigInteger, List<String> list, String str, BigInteger bigInteger2, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        BigInteger bigInteger7 = bigInteger;
        List<String> list2 = list;
        String str2 = str;
        BigInteger bigInteger8 = bigInteger2;
        return h75.createTransaction(bigInteger3, bigInteger5, bigInteger6, this.contractAddress, bigInteger4, xd2.encode(new gd2("swapETHForExactTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger2)}), Collections.emptyList())));
    }

    /* renamed from: t */
    public qt6 mo56515t(BigInteger bigInteger, List<String> list, String str, BigInteger bigInteger2, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, bigInteger4, xd2.encode(new gd2("swapExactETHForTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger2)}), Collections.emptyList())));
    }

    /* renamed from: u */
    public h75 mo56516u(BigInteger bigInteger, List<String> list, String str, BigInteger bigInteger2, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        BigInteger bigInteger7 = bigInteger;
        List<String> list2 = list;
        String str2 = str;
        BigInteger bigInteger8 = bigInteger2;
        return h75.createTransaction(bigInteger3, bigInteger5, bigInteger6, this.contractAddress, bigInteger4, xd2.encode(new gd2("swapExactETHForTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger2)}), Collections.emptyList())));
    }

    /* renamed from: v */
    public qt6 mo56517v(BigInteger bigInteger, List<String> list, String str, BigInteger bigInteger2, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, bigInteger4, xd2.encode(new gd2("swapExactETHForTokensSupportingFeeOnTransferTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger2)}), Collections.emptyList())));
    }

    /* renamed from: w */
    public h75 mo56518w(BigInteger bigInteger, List<String> list, String str, BigInteger bigInteger2, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        BigInteger bigInteger7 = bigInteger;
        List<String> list2 = list;
        String str2 = str;
        BigInteger bigInteger8 = bigInteger2;
        return h75.createTransaction(bigInteger3, bigInteger5, bigInteger6, this.contractAddress, bigInteger4, xd2.encode(new gd2("swapExactETHForTokensSupportingFeeOnTransferTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger2)}), Collections.emptyList())));
    }

    /* renamed from: x */
    public rc5<au6> mo56519x(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3) {
        Class<Address> cls = Address.class;
        return executeRemoteCallTransaction(new gd2("swapExactTokensForETH", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList()));
    }

    /* renamed from: y */
    public qt6 mo56520y(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3, BigInteger bigInteger4, BigInteger bigInteger5, BigInteger bigInteger6) {
        Class<Address> cls = Address.class;
        return qt6.createFunctionCallTransaction(str, (BigInteger) null, (BigInteger) null, (BigInteger) null, this.contractAddress, BigInteger.ZERO, xd2.encode(new gd2("swapExactTokensForETH", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList())));
    }

    /* renamed from: z */
    public rc5<au6> mo56521z(BigInteger bigInteger, BigInteger bigInteger2, List<String> list, String str, BigInteger bigInteger3) {
        Class<Address> cls = Address.class;
        return executeRemoteCallTransaction(new gd2("swapExactTokensForETHSupportingFeeOnTransferTokens", Arrays.asList(new fz6[]{new Uint256(bigInteger), new Uint256(bigInteger2), new DynamicArray(cls, Utils.typeMap(list, cls)), new Address(160, str), new Uint256(bigInteger3)}), Collections.emptyList()));
    }
}
