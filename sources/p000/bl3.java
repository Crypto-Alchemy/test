package p000;

import androidx.recyclerview.widget.RecyclerView;
import java.math.BigInteger;
import net.sqlcipher.database.SQLiteDatabase;
import okhttp3.internal.http2.Http2Connection;

/* renamed from: bl3 */
public class bl3 implements Cloneable {

    /* renamed from: d */
    public static final short[] f36894d = {0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277, 320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088, 1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301, 1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116, 4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369, 4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136, 5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381, 5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, 16384, 16385, 16388, 16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469, 16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720, 16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473, 17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684, 17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485, 20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736, 20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817, 20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572, 21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781, 21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845};

    /* renamed from: e */
    public static final int[] f36895e = {0, 1, 8, 9, 64, 65, 72, 73, RecyclerView.C1231a0.FLAG_ADAPTER_POSITION_UNKNOWN, 513, 520, 521, 576, 577, 584, 585, 4096, 4097, 4104, 4105, 4160, 4161, 4168, 4169, 4608, 4609, 4616, 4617, 4672, 4673, 4680, 4681, 32768, 32769, 32776, 32777, 32832, 32833, 32840, 32841, 33280, 33281, 33288, 33289, 33344, 33345, 33352, 33353, 36864, 36865, 36872, 36873, 36928, 36929, 36936, 36937, 37376, 37377, 37384, 37385, 37440, 37441, 37448, 37449, 262144, 262145, 262152, 262153, 262208, 262209, 262216, 262217, 262656, 262657, 262664, 262665, 262720, 262721, 262728, 262729, 266240, 266241, 266248, 266249, 266304, 266305, 266312, 266313, 266752, 266753, 266760, 266761, 266816, 266817, 266824, 266825, 294912, 294913, 294920, 294921, 294976, 294977, 294984, 294985, 295424, 295425, 295432, 295433, 295488, 295489, 295496, 295497, 299008, 299009, 299016, 299017, 299072, 299073, 299080, 299081, 299520, 299521, 299528, 299529, 299584, 299585, 299592, 299593};

    /* renamed from: g */
    public static final int[] f36896g = {0, 1, 16, 17, 256, 257, 272, 273, 4096, 4097, 4112, 4113, 4352, 4353, 4368, 4369, 65536, 65537, 65552, 65553, 65792, 65793, 65808, 65809, 69632, 69633, 69648, 69649, 69888, 69889, 69904, 69905, 1048576, 1048577, 1048592, 1048593, 1048832, 1048833, 1048848, 1048849, 1052672, 1052673, 1052688, 1052689, 1052928, 1052929, 1052944, 1052945, 1114112, 1114113, 1114128, 1114129, 1114368, 1114369, 1114384, 1114385, 1118208, 1118209, 1118224, 1118225, 1118464, 1118465, 1118480, 1118481, Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE, 16777217, 16777232, 16777233, 16777472, 16777473, 16777488, 16777489, 16781312, 16781313, 16781328, 16781329, 16781568, 16781569, 16781584, 16781585, 16842752, 16842753, 16842768, 16842769, 16843008, 16843009, 16843024, 16843025, 16846848, 16846849, 16846864, 16846865, 16847104, 16847105, 16847120, 16847121, 17825792, 17825793, 17825808, 17825809, 17826048, 17826049, 17826064, 17826065, 17829888, 17829889, 17829904, 17829905, 17830144, 17830145, 17830160, 17830161, 17891328, 17891329, 17891344, 17891345, 17891584, 17891585, 17891600, 17891601, 17895424, 17895425, 17895440, 17895441, 17895680, 17895681, 17895696, 17895697, SQLiteDatabase};

    /* renamed from: k */
    public static final int[] f36897k = {0, 1, 32, 33, RecyclerView.C1231a0.FLAG_ADAPTER_FULLUPDATE, 1025, 1056, 1057, 32768, 32769, 32800, 32801, 33792, 33793, 33824, 33825, 1048576, 1048577, 1048608, 1048609, 1049600, 1049601, 1049632, 1049633, 1081344, 1081345, 1081376, 1081377, 1082368, 1082369, 1082400, 1082401, 33554432, 33554433, 33554464, 33554465, 33555456, 33555457, 33555488, 33555489, 33587200, 33587201, 33587232, 33587233, 33588224, 33588225, 33588256, 33588257, 34603008, 34603009, 34603040, 34603041, 34604032, 34604033, 34604064, 34604065, 34635776, 34635777, 34635808, 34635809, 34636800, 34636801, 34636832, 34636833, 1073741824, 1073741825, 1073741856, 1073741857, 1073742848, 1073742849, 1073742880, 1073742881, 1073774592, 1073774593, 1073774624, 1073774625, 1073775616, 1073775617, 1073775648, 1073775649, 1074790400, 1074790401, 1074790432, 1074790433, 1074791424, 1074791425, 1074791456, 1074791457, 1074823168, 1074823169, 1074823200, 1074823201, 1074824192, 1074824193, 1074824224, 1074824225, 1107296256, 1107296257, 1107296288, 1107296289, 1107297280, 1107297281, 1107297312, 1107297313, 1107329024, 1107329025, 1107329056, 1107329057, 1107330048, 1107330049, 1107330080, 1107330081, 1108344832, 1108344833, 1108344864, 1108344865, 1108345856, 1108345857, 1108345888, 1108345889, 1108377600, 1108377601, 1108377632, 1108377633, 1108378624, 1108378625, 1108378656, 1108378657};

    /* renamed from: r */
    public static final long[] f36898r;

    /* renamed from: s */
    public static final byte[] f36899s = {0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8};

    /* renamed from: a */
    public long[] f36900a;

    static {
        long[] jArr = new long[RecyclerView.C1231a0.FLAG_ADAPTER_POSITION_UNKNOWN];
        // fill-array-data instruction
        jArr[0] = 0;
        jArr[1] = 1;
        jArr[2] = 128;
        jArr[3] = 129;
        jArr[4] = 16384;
        jArr[5] = 16385;
        jArr[6] = 16512;
        jArr[7] = 16513;
        jArr[8] = 2097152;
        jArr[9] = 2097153;
        jArr[10] = 2097280;
        jArr[11] = 2097281;
        jArr[12] = 2113536;
        jArr[13] = 2113537;
        jArr[14] = 2113664;
        jArr[15] = 2113665;
        jArr[16] = 268435456;
        jArr[17] = 268435457;
        jArr[18] = 268435584;
        jArr[19] = 268435585;
        jArr[20] = 268451840;
        jArr[21] = 268451841;
        jArr[22] = 268451968;
        jArr[23] = 268451969;
        jArr[24] = 270532608;
        jArr[25] = 270532609;
        jArr[26] = 270532736;
        jArr[27] = 270532737;
        jArr[28] = 270548992;
        jArr[29] = 270548993;
        jArr[30] = 270549120;
        jArr[31] = 270549121;
        jArr[32] = 34359738368;
        jArr[33] = 34359738369;
        jArr[34] = 34359738496;
        jArr[35] = 34359738497;
        jArr[36] = 34359754752;
        jArr[37] = 34359754753;
        jArr[38] = 34359754880;
        jArr[39] = 34359754881;
        jArr[40] = 34361835520;
        jArr[41] = 34361835521;
        jArr[42] = 34361835648;
        jArr[43] = 34361835649;
        jArr[44] = 34361851904;
        jArr[45] = 34361851905;
        jArr[46] = 34361852032;
        jArr[47] = 34361852033;
        jArr[48] = 34628173824;
        jArr[49] = 34628173825;
        jArr[50] = 34628173952;
        jArr[51] = 34628173953;
        jArr[52] = 34628190208;
        jArr[53] = 34628190209;
        jArr[54] = 34628190336;
        jArr[55] = 34628190337;
        jArr[56] = 34630270976;
        jArr[57] = 34630270977;
        jArr[58] = 34630271104;
        jArr[59] = 34630271105;
        jArr[60] = 34630287360;
        jArr[61] = 34630287361;
        jArr[62] = 34630287488;
        jArr[63] = 34630287489;
        jArr[64] = 4398046511104;
        jArr[65] = 4398046511105;
        jArr[66] = 4398046511232;
        jArr[67] = 4398046511233;
        jArr[68] = 4398046527488;
        jArr[69] = 4398046527489;
        jArr[70] = 4398046527616;
        jArr[71] = 4398046527617;
        jArr[72] = 4398048608256;
        jArr[73] = 4398048608257;
        jArr[74] = 4398048608384;
        jArr[75] = 4398048608385;
        jArr[76] = 4398048624640;
        jArr[77] = 4398048624641;
        jArr[78] = 4398048624768;
        jArr[79] = 4398048624769;
        jArr[80] = 4398314946560;
        jArr[81] = 4398314946561;
        jArr[82] = 4398314946688;
        jArr[83] = 4398314946689;
        jArr[84] = 4398314962944;
        jArr[85] = 4398314962945;
        jArr[86] = 4398314963072;
        jArr[87] = 4398314963073;
        jArr[88] = 4398317043712;
        jArr[89] = 4398317043713;
        jArr[90] = 4398317043840;
        jArr[91] = 4398317043841;
        jArr[92] = 4398317060096;
        jArr[93] = 4398317060097;
        jArr[94] = 4398317060224;
        jArr[95] = 4398317060225;
        jArr[96] = 4432406249472;
        jArr[97] = 4432406249473;
        jArr[98] = 4432406249600;
        jArr[99] = 4432406249601;
        jArr[100] = 4432406265856;
        jArr[101] = 4432406265857;
        jArr[102] = 4432406265984;
        jArr[103] = 4432406265985;
        jArr[104] = 4432408346624;
        jArr[105] = 4432408346625;
        jArr[106] = 4432408346752;
        jArr[107] = 4432408346753;
        jArr[108] = 4432408363008;
        jArr[109] = 4432408363009;
        jArr[110] = 4432408363136;
        jArr[111] = 4432408363137;
        jArr[112] = 4432674684928;
        jArr[113] = 4432674684929;
        jArr[114] = 4432674685056;
        jArr[115] = 4432674685057;
        jArr[116] = 4432674701312;
        jArr[117] = 4432674701313;
        jArr[118] = 4432674701440;
        jArr[119] = 4432674701441;
        jArr[120] = 4432676782080;
        jArr[121] = 4432676782081;
        jArr[122] = 4432676782208;
        jArr[123] = 4432676782209;
        jArr[124] = 4432676798464;
        jArr[125] = 4432676798465;
        jArr[126] = 4432676798592;
        jArr[127] = 4432676798593;
        jArr[128] = 562949953421312;
        jArr[129] = 562949953421313;
        jArr[130] = 562949953421440;
        jArr[131] = 562949953421441;
        jArr[132] = 562949953437696;
        jArr[133] = 562949953437697;
        jArr[134] = 562949953437824;
        jArr[135] = 562949953437825;
        jArr[136] = 562949955518464;
        jArr[137] = 562949955518465;
        jArr[138] = 562949955518592;
        jArr[139] = 562949955518593;
        jArr[140] = 562949955534848;
        jArr[141] = 562949955534849;
        jArr[142] = 562949955534976;
        jArr[143] = 562949955534977;
        jArr[144] = 562950221856768;
        jArr[145] = 562950221856769;
        jArr[146] = 562950221856896;
        jArr[147] = 562950221856897;
        jArr[148] = 562950221873152;
        jArr[149] = 562950221873153;
        jArr[150] = 562950221873280;
        jArr[151] = 562950221873281;
        jArr[152] = 562950223953920;
        jArr[153] = 562950223953921;
        jArr[154] = 562950223954048;
        jArr[155] = 562950223954049;
        jArr[156] = 562950223970304;
        jArr[157] = 562950223970305;
        jArr[158] = 562950223970432;
        jArr[159] = 562950223970433;
        jArr[160] = 562984313159680;
        jArr[161] = 562984313159681;
        jArr[162] = 562984313159808;
        jArr[163] = 562984313159809;
        jArr[164] = 562984313176064;
        jArr[165] = 562984313176065;
        jArr[166] = 562984313176192;
        jArr[167] = 562984313176193;
        jArr[168] = 562984315256832;
        jArr[169] = 562984315256833;
        jArr[170] = 562984315256960;
        jArr[171] = 562984315256961;
        jArr[172] = 562984315273216;
        jArr[173] = 562984315273217;
        jArr[174] = 562984315273344;
        jArr[175] = 562984315273345;
        jArr[176] = 562984581595136;
        jArr[177] = 562984581595137;
        jArr[178] = 562984581595264;
        jArr[179] = 562984581595265;
        jArr[180] = 562984581611520;
        jArr[181] = 562984581611521;
        jArr[182] = 562984581611648;
        jArr[183] = 562984581611649;
        jArr[184] = 562984583692288;
        jArr[185] = 562984583692289;
        jArr[186] = 562984583692416;
        jArr[187] = 562984583692417;
        jArr[188] = 562984583708672;
        jArr[189] = 562984583708673;
        jArr[190] = 562984583708800;
        jArr[191] = 562984583708801;
        jArr[192] = 567347999932416;
        jArr[193] = 567347999932417;
        jArr[194] = 567347999932544;
        jArr[195] = 567347999932545;
        jArr[196] = 567347999948800;
        jArr[197] = 567347999948801;
        jArr[198] = 567347999948928;
        jArr[199] = 567347999948929;
        jArr[200] = 567348002029568;
        jArr[201] = 567348002029569;
        jArr[202] = 567348002029696;
        jArr[203] = 567348002029697;
        jArr[204] = 567348002045952;
        jArr[205] = 567348002045953;
        jArr[206] = 567348002046080;
        jArr[207] = 567348002046081;
        jArr[208] = 567348268367872;
        jArr[209] = 567348268367873;
        jArr[210] = 567348268368000;
        jArr[211] = 567348268368001;
        jArr[212] = 567348268384256;
        jArr[213] = 567348268384257;
        jArr[214] = 567348268384384;
        jArr[215] = 567348268384385;
        jArr[216] = 567348270465024;
        jArr[217] = 567348270465025;
        jArr[218] = 567348270465152;
        jArr[219] = 567348270465153;
        jArr[220] = 567348270481408;
        jArr[221] = 567348270481409;
        jArr[222] = 567348270481536;
        jArr[223] = 567348270481537;
        jArr[224] = 567382359670784;
        jArr[225] = 567382359670785;
        jArr[226] = 567382359670912;
        jArr[227] = 567382359670913;
        jArr[228] = 567382359687168;
        jArr[229] = 567382359687169;
        jArr[230] = 567382359687296;
        jArr[231] = 567382359687297;
        jArr[232] = 567382361767936;
        jArr[233] = 567382361767937;
        jArr[234] = 567382361768064;
        jArr[235] = 567382361768065;
        jArr[236] = 567382361784320;
        jArr[237] = 567382361784321;
        jArr[238] = 567382361784448;
        jArr[239] = 567382361784449;
        jArr[240] = 567382628106240;
        jArr[241] = 567382628106241;
        jArr[242] = 567382628106368;
        jArr[243] = 567382628106369;
        jArr[244] = 567382628122624;
        jArr[245] = 567382628122625;
        jArr[246] = 567382628122752;
        jArr[247] = 567382628122753;
        jArr[248] = 567382630203392;
        jArr[249] = 567382630203393;
        jArr[250] = 567382630203520;
        jArr[251] = 567382630203521;
        jArr[252] = 567382630219776;
        jArr[253] = 567382630219777;
        jArr[254] = 567382630219904;
        jArr[255] = 567382630219905;
        jArr[256] = 72057594037927936;
        jArr[257] = 72057594037927937;
        jArr[258] = 72057594037928064;
        jArr[259] = 72057594037928065;
        jArr[260] = 72057594037944320;
        jArr[261] = 72057594037944321;
        jArr[262] = 72057594037944448;
        jArr[263] = 72057594037944449;
        jArr[264] = 72057594040025088;
        jArr[265] = 72057594040025089;
        jArr[266] = 72057594040025216;
        jArr[267] = 72057594040025217;
        jArr[268] = 72057594040041472;
        jArr[269] = 72057594040041473;
        jArr[270] = 72057594040041600;
        jArr[271] = 72057594040041601;
        jArr[272] = 72057594306363392;
        jArr[273] = 72057594306363393;
        jArr[274] = 72057594306363520;
        jArr[275] = 72057594306363521;
        jArr[276] = 72057594306379776;
        jArr[277] = 72057594306379777;
        jArr[278] = 72057594306379904;
        jArr[279] = 72057594306379905;
        jArr[280] = 72057594308460544;
        jArr[281] = 72057594308460545;
        jArr[282] = 72057594308460672;
        jArr[283] = 72057594308460673;
        jArr[284] = 72057594308476928;
        jArr[285] = 72057594308476929;
        jArr[286] = 72057594308477056;
        jArr[287] = 72057594308477057;
        jArr[288] = 72057628397666304;
        jArr[289] = 72057628397666305;
        jArr[290] = 72057628397666432;
        jArr[291] = 72057628397666433;
        jArr[292] = 72057628397682688;
        jArr[293] = 72057628397682689;
        jArr[294] = 72057628397682816;
        jArr[295] = 72057628397682817;
        jArr[296] = 72057628399763456;
        jArr[297] = 72057628399763457;
        jArr[298] = 72057628399763584;
        jArr[299] = 72057628399763585;
        jArr[300] = 72057628399779840;
        jArr[301] = 72057628399779841;
        jArr[302] = 72057628399779968;
        jArr[303] = 72057628399779969;
        jArr[304] = 72057628666101760;
        jArr[305] = 72057628666101761;
        jArr[306] = 72057628666101888;
        jArr[307] = 72057628666101889;
        jArr[308] = 72057628666118144;
        jArr[309] = 72057628666118145;
        jArr[310] = 72057628666118272;
        jArr[311] = 72057628666118273;
        jArr[312] = 72057628668198912;
        jArr[313] = 72057628668198913;
        jArr[314] = 72057628668199040;
        jArr[315] = 72057628668199041;
        jArr[316] = 72057628668215296;
        jArr[317] = 72057628668215297;
        jArr[318] = 72057628668215424;
        jArr[319] = 72057628668215425;
        jArr[320] = 72061992084439040;
        jArr[321] = 72061992084439041;
        jArr[322] = 72061992084439168;
        jArr[323] = 72061992084439169;
        jArr[324] = 72061992084455424;
        jArr[325] = 72061992084455425;
        jArr[326] = 72061992084455552;
        jArr[327] = 72061992084455553;
        jArr[328] = 72061992086536192;
        jArr[329] = 72061992086536193;
        jArr[330] = 72061992086536320;
        jArr[331] = 72061992086536321;
        jArr[332] = 72061992086552576;
        jArr[333] = 72061992086552577;
        jArr[334] = 72061992086552704;
        jArr[335] = 72061992086552705;
        jArr[336] = 72061992352874496;
        jArr[337] = 72061992352874497;
        jArr[338] = 72061992352874624;
        jArr[339] = 72061992352874625;
        jArr[340] = 72061992352890880;
        jArr[341] = 72061992352890881;
        jArr[342] = 72061992352891008;
        jArr[343] = 72061992352891009;
        jArr[344] = 72061992354971648;
        jArr[345] = 72061992354971649;
        jArr[346] = 72061992354971776;
        jArr[347] = 72061992354971777;
        jArr[348] = 72061992354988032;
        jArr[349] = 72061992354988033;
        jArr[350] = 72061992354988160;
        jArr[351] = 72061992354988161;
        jArr[352] = 72062026444177408;
        jArr[353] = 72062026444177409;
        jArr[354] = 72062026444177536;
        jArr[355] = 72062026444177537;
        jArr[356] = 72062026444193792;
        jArr[357] = 72062026444193793;
        jArr[358] = 72062026444193920;
        jArr[359] = 72062026444193921;
        jArr[360] = 72062026446274560;
        jArr[361] = 72062026446274561;
        jArr[362] = 72062026446274688;
        jArr[363] = 72062026446274689;
        jArr[364] = 72062026446290944;
        jArr[365] = 72062026446290945;
        jArr[366] = 72062026446291072;
        jArr[367] = 72062026446291073;
        jArr[368] = 72062026712612864;
        jArr[369] = 72062026712612865;
        jArr[370] = 72062026712612992;
        jArr[371] = 72062026712612993;
        jArr[372] = 72062026712629248;
        jArr[373] = 72062026712629249;
        jArr[374] = 72062026712629376;
        jArr[375] = 72062026712629377;
        jArr[376] = 72062026714710016;
        jArr[377] = 72062026714710017;
        jArr[378] = 72062026714710144;
        jArr[379] = 72062026714710145;
        jArr[380] = 72062026714726400;
        jArr[381] = 72062026714726401;
        jArr[382] = 72062026714726528;
        jArr[383] = 72062026714726529;
        jArr[384] = 72620543991349248;
        jArr[385] = 72620543991349249;
        jArr[386] = 72620543991349376;
        jArr[387] = 72620543991349377;
        jArr[388] = 72620543991365632;
        jArr[389] = 72620543991365633;
        jArr[390] = 72620543991365760;
        jArr[391] = 72620543991365761;
        jArr[392] = 72620543993446400;
        jArr[393] = 72620543993446401;
        jArr[394] = 72620543993446528;
        jArr[395] = 72620543993446529;
        jArr[396] = 72620543993462784;
        jArr[397] = 72620543993462785;
        jArr[398] = 72620543993462912;
        jArr[399] = 72620543993462913;
        jArr[400] = 72620544259784704;
        jArr[401] = 72620544259784705;
        jArr[402] = 72620544259784832;
        jArr[403] = 72620544259784833;
        jArr[404] = 72620544259801088;
        jArr[405] = 72620544259801089;
        jArr[406] = 72620544259801216;
        jArr[407] = 72620544259801217;
        jArr[408] = 72620544261881856;
        jArr[409] = 72620544261881857;
        jArr[410] = 72620544261881984;
        jArr[411] = 72620544261881985;
        jArr[412] = 72620544261898240;
        jArr[413] = 72620544261898241;
        jArr[414] = 72620544261898368;
        jArr[415] = 72620544261898369;
        jArr[416] = 72620578351087616;
        jArr[417] = 72620578351087617;
        jArr[418] = 72620578351087744;
        jArr[419] = 72620578351087745;
        jArr[420] = 72620578351104000;
        jArr[421] = 72620578351104001;
        jArr[422] = 72620578351104128;
        jArr[423] = 72620578351104129;
        jArr[424] = 72620578353184768;
        jArr[425] = 72620578353184769;
        jArr[426] = 72620578353184896;
        jArr[427] = 72620578353184897;
        jArr[428] = 72620578353201152;
        jArr[429] = 72620578353201153;
        jArr[430] = 72620578353201280;
        jArr[431] = 72620578353201281;
        jArr[432] = 72620578619523072;
        jArr[433] = 72620578619523073;
        jArr[434] = 72620578619523200;
        jArr[435] = 72620578619523201;
        jArr[436] = 72620578619539456;
        jArr[437] = 72620578619539457;
        jArr[438] = 72620578619539584;
        jArr[439] = 72620578619539585;
        jArr[440] = 72620578621620224;
        jArr[441] = 72620578621620225;
        jArr[442] = 72620578621620352;
        jArr[443] = 72620578621620353;
        jArr[444] = 72620578621636608;
        jArr[445] = 72620578621636609;
        jArr[446] = 72620578621636736;
        jArr[447] = 72620578621636737;
        jArr[448] = 72624942037860352;
        jArr[449] = 72624942037860353;
        jArr[450] = 72624942037860480;
        jArr[451] = 72624942037860481;
        jArr[452] = 72624942037876736;
        jArr[453] = 72624942037876737;
        jArr[454] = 72624942037876864;
        jArr[455] = 72624942037876865;
        jArr[456] = 72624942039957504;
        jArr[457] = 72624942039957505;
        jArr[458] = 72624942039957632;
        jArr[459] = 72624942039957633;
        jArr[460] = 72624942039973888;
        jArr[461] = 72624942039973889;
        jArr[462] = 72624942039974016;
        jArr[463] = 72624942039974017;
        jArr[464] = 72624942306295808;
        jArr[465] = 72624942306295809;
        jArr[466] = 72624942306295936;
        jArr[467] = 72624942306295937;
        jArr[468] = 72624942306312192;
        jArr[469] = 72624942306312193;
        jArr[470] = 72624942306312320;
        jArr[471] = 72624942306312321;
        jArr[472] = 72624942308392960;
        jArr[473] = 72624942308392961;
        jArr[474] = 72624942308393088;
        jArr[475] = 72624942308393089;
        jArr[476] = 72624942308409344;
        jArr[477] = 72624942308409345;
        jArr[478] = 72624942308409472;
        jArr[479] = 72624942308409473;
        jArr[480] = 72624976397598720;
        jArr[481] = 72624976397598721;
        jArr[482] = 72624976397598848;
        jArr[483] = 72624976397598849;
        jArr[484] = 72624976397615104;
        jArr[485] = 72624976397615105;
        jArr[486] = 72624976397615232;
        jArr[487] = 72624976397615233;
        jArr[488] = 72624976399695872;
        jArr[489] = 72624976399695873;
        jArr[490] = 72624976399696000;
        jArr[491] = 72624976399696001;
        jArr[492] = 72624976399712256;
        jArr[493] = 72624976399712257;
        jArr[494] = 72624976399712384;
        jArr[495] = 72624976399712385;
        jArr[496] = 72624976666034176;
        jArr[497] = 72624976666034177;
        jArr[498] = 72624976666034304;
        jArr[499] = 72624976666034305;
        jArr[500] = 72624976666050560;
        jArr[501] = 72624976666050561;
        jArr[502] = 72624976666050688;
        jArr[503] = 72624976666050689;
        jArr[504] = 72624976668131328;
        jArr[505] = 72624976668131329;
        jArr[506] = 72624976668131456;
        jArr[507] = 72624976668131457;
        jArr[508] = 72624976668147712;
        jArr[509] = 72624976668147713;
        jArr[510] = 72624976668147840;
        jArr[511] = 72624976668147841;
        f36898r = jArr;
    }

    public bl3(int i) {
        this.f36900a = new long[i];
    }

    public bl3(BigInteger bigInteger) {
        int i;
        if (bigInteger == null || bigInteger.signum() < 0) {
            throw new IllegalArgumentException("invalid F2m field value");
        } else if (bigInteger.signum() == 0) {
            this.f36900a = new long[]{0};
        } else {
            byte[] byteArray = bigInteger.toByteArray();
            int length = byteArray.length;
            if (byteArray[0] == 0) {
                length--;
                i = 1;
            } else {
                i = 0;
            }
            int i2 = (length + 7) / 8;
            this.f36900a = new long[i2];
            int i3 = i2 - 1;
            int i4 = (length % 8) + i;
            if (i < i4) {
                long j = 0;
                while (i < i4) {
                    j = (j << 8) | ((long) (byteArray[i] & 255));
                    i++;
                }
                this.f36900a[i3] = j;
                i3--;
            }
            while (i3 >= 0) {
                long j2 = 0;
                int i5 = 0;
                while (i5 < 8) {
                    j2 = (j2 << 8) | ((long) (byteArray[i] & 255));
                    i5++;
                    i++;
                }
                this.f36900a[i3] = j2;
                i3--;
            }
        }
    }

    public bl3(long[] jArr) {
        this.f36900a = jArr;
    }

    public bl3(long[] jArr, int i, int i2) {
        if (i == 0 && i2 == jArr.length) {
            this.f36900a = jArr;
            return;
        }
        long[] jArr2 = new long[i2];
        this.f36900a = jArr2;
        System.arraycopy(jArr, i, jArr2, 0, i2);
    }

    /* renamed from: G */
    public static void m56013G(long j, long[] jArr, int i, long[] jArr2, int i2) {
        int i3 = i;
        long[] jArr3 = jArr2;
        int i4 = i2;
        if ((j & 1) != 0) {
            m56024a(jArr3, i4, jArr, 0, i3);
        } else {
            long[] jArr4 = jArr;
        }
        long j2 = j;
        int i5 = 1;
        while (true) {
            long j3 = j2 >>> 1;
            if (j3 != 0) {
                if ((j3 & 1) != 0) {
                    long j4 = m56028j(jArr2, i2, jArr, 0, i, i5);
                    if (j4 != 0) {
                        int i6 = i4 + i3;
                        jArr3[i6] = j4 ^ jArr3[i6];
                    }
                }
                i5++;
                j2 = j3;
            } else {
                return;
            }
        }
    }

    /* renamed from: I */
    public static void m56014I(long[] jArr, int i, int i2, int i3, int[] iArr) {
        m56030r(jArr, i, i2);
        int i4 = i2 - i3;
        int length = iArr.length;
        while (true) {
            length--;
            if (length >= 0) {
                m56030r(jArr, i, iArr[length] + i4);
            } else {
                m56030r(jArr, i, i4);
                return;
            }
        }
    }

    /* renamed from: J */
    public static void m56015J(long[] jArr, int i, int i2, int i3, int[] iArr) {
        while (true) {
            i2--;
            if (i2 < i3) {
                return;
            }
            if (m56023U(jArr, i, i2)) {
                m56014I(jArr, i, i2, i3, iArr);
            }
        }
    }

    /* renamed from: K */
    public static int m56016K(long[] jArr, int i, int i2, int i3, int[] iArr) {
        long[] jArr2 = jArr;
        int i4 = i;
        int i5 = i2;
        int i6 = i3;
        int[] iArr2 = iArr;
        int i7 = (i6 + 63) >>> 6;
        if (i5 < i7) {
            return i5;
        }
        int i8 = i5 << 6;
        int min = Math.min(i8, (i6 << 1) - 1);
        int i9 = i8 - min;
        int i10 = i5;
        while (i9 >= 64) {
            i10--;
            i9 -= 64;
        }
        int length = iArr2.length;
        int i11 = iArr2[length - 1];
        int i12 = length > 1 ? iArr2[length - 2] : 0;
        int max = Math.max(i6, i11 + 64);
        int min2 = (i9 + Math.min(min - max, i6 - i12)) >> 6;
        if (min2 > 1) {
            int i13 = i10 - min2;
            m56018M(jArr, i, i10, i13, i3, iArr);
            while (i10 > i13) {
                i10--;
                jArr2[i4 + i10] = 0;
            }
            min = i13 << 6;
        }
        if (min > max) {
            m56020O(jArr, i, i10, max, i3, iArr);
        } else {
            max = min;
        }
        if (max > i6) {
            m56015J(jArr, i, max, i6, iArr2);
        }
        return i7;
    }

    /* renamed from: L */
    public static bl3 m56017L(long[] jArr, int i, int i2, int i3, int[] iArr) {
        return new bl3(jArr, i, m56016K(jArr, i, i2, i3, iArr));
    }

    /* renamed from: M */
    public static void m56018M(long[] jArr, int i, int i2, int i3, int i4, int[] iArr) {
        int i5 = (i3 << 6) - i4;
        int length = iArr.length;
        while (true) {
            length--;
            if (length >= 0) {
                m56031t(jArr, i, jArr, i + i3, i2 - i3, i5 + iArr[length]);
            } else {
                m56031t(jArr, i, jArr, i + i3, i2 - i3, i5);
                return;
            }
        }
    }

    /* renamed from: N */
    public static void m56019N(long[] jArr, int i, int i2, long j, int i3, int[] iArr) {
        int i4 = i2 - i3;
        int length = iArr.length;
        while (true) {
            length--;
            if (length >= 0) {
                m56032u(jArr, i, iArr[length] + i4, j);
            } else {
                m56032u(jArr, i, i4, j);
                return;
            }
        }
    }

    /* renamed from: O */
    public static void m56020O(long[] jArr, int i, int i2, int i3, int i4, int[] iArr) {
        int i5 = i3 >>> 6;
        int i6 = i2;
        while (true) {
            int i7 = i6 - 1;
            if (i7 <= i5) {
                break;
            }
            int i8 = i + i7;
            long j = jArr[i8];
            if (j != 0) {
                jArr[i8] = 0;
                m56019N(jArr, i, i7 << 6, j, i4, iArr);
            }
            i6 = i7;
        }
        int i9 = i3 & 63;
        int i10 = i + i5;
        long j2 = jArr[i10];
        long j3 = j2 >>> i9;
        if (j3 != 0) {
            jArr[i10] = (j3 << i9) ^ j2;
            m56019N(jArr, i, i3, j3, i4, iArr);
        }
    }

    /* renamed from: R */
    public static long m56021R(long[] jArr, int i, long[] jArr2, int i2, int i3, int i4) {
        int i5 = 64 - i4;
        long j = 0;
        for (int i6 = 0; i6 < i3; i6++) {
            long j2 = jArr[i + i6];
            jArr2[i2 + i6] = j | (j2 << i4);
            j = j2 >>> i5;
        }
        return j;
    }

    /* renamed from: T */
    public static void m56022T(long[] jArr, int i, int i2, int[] iArr) {
        int i3 = i << 1;
        while (true) {
            i--;
            if (i >= 0) {
                long j = jArr[i];
                int i4 = i3 - 1;
                jArr[i4] = m56033x((int) (j >>> 32));
                i3 = i4 - 1;
                jArr[i3] = m56033x((int) j);
            } else {
                return;
            }
        }
    }

    /* renamed from: U */
    public static boolean m56023U(long[] jArr, int i, int i2) {
        return (jArr[i + (i2 >>> 6)] & (1 << (i2 & 63))) != 0;
    }

    /* renamed from: a */
    public static void m56024a(long[] jArr, int i, long[] jArr2, int i2, int i3) {
        for (int i4 = 0; i4 < i3; i4++) {
            int i5 = i + i4;
            jArr[i5] = jArr[i5] ^ jArr2[i2 + i4];
        }
    }

    /* renamed from: b */
    public static void m56025b(long[] jArr, int i, long[] jArr2, int i2, long[] jArr3, int i3, int i4) {
        for (int i5 = 0; i5 < i4; i5++) {
            jArr3[i3 + i5] = jArr[i + i5] ^ jArr2[i2 + i5];
        }
    }

    /* renamed from: d */
    public static void m56026d(long[] jArr, int i, long[] jArr2, int i2, long[] jArr3, int i3, int i4) {
        for (int i5 = 0; i5 < i4; i5++) {
            int i6 = i + i5;
            jArr[i6] = jArr[i6] ^ (jArr2[i2 + i5] ^ jArr3[i3 + i5]);
        }
    }

    /* renamed from: i */
    public static long m56027i(long[] jArr, int i, long[] jArr2, int i2, int i3, int i4) {
        int i5 = 64 - i4;
        long j = 0;
        while (true) {
            i3--;
            if (i3 < 0) {
                return j;
            }
            long j2 = jArr2[i2 + i3];
            int i6 = i + i3;
            jArr[i6] = (j | (j2 >>> i4)) ^ jArr[i6];
            j = j2 << i5;
        }
    }

    /* renamed from: j */
    public static long m56028j(long[] jArr, int i, long[] jArr2, int i2, int i3, int i4) {
        int i5 = 64 - i4;
        long j = 0;
        int i6 = i3;
        for (int i7 = 0; i7 < i6; i7++) {
            long j2 = jArr2[i2 + i7];
            int i8 = i + i7;
            jArr[i8] = (j | (j2 << i4)) ^ jArr[i8];
            j = j2 >>> i5;
        }
        return j;
    }

    /* JADX WARNING: type inference failed for: r3v11, types: [byte[]] */
    /* JADX WARNING: type inference failed for: r3v12, types: [byte] */
    /* JADX WARNING: Incorrect type for immutable var: ssa=byte, code=int, for r3v12, types: [byte] */
    /* renamed from: l */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static int m56029l(long r3) {
        /*
            r0 = 32
            long r1 = r3 >>> r0
            int r1 = (int) r1
            if (r1 != 0) goto L_0x0009
            int r1 = (int) r3
            r0 = 0
        L_0x0009:
            int r3 = r1 >>> 16
            if (r3 != 0) goto L_0x001d
            int r3 = r1 >>> 8
            if (r3 != 0) goto L_0x0016
            byte[] r3 = f36899s
            byte r3 = r3[r1]
            goto L_0x002e
        L_0x0016:
            byte[] r4 = f36899s
            byte r3 = r4[r3]
            int r3 = r3 + 8
            goto L_0x002e
        L_0x001d:
            int r4 = r3 >>> 8
            if (r4 != 0) goto L_0x0028
            byte[] r4 = f36899s
            byte r3 = r4[r3]
            int r3 = r3 + 16
            goto L_0x002e
        L_0x0028:
            byte[] r3 = f36899s
            byte r3 = r3[r4]
            int r3 = r3 + 24
        L_0x002e:
            int r0 = r0 + r3
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: p000.bl3.m56029l(long):int");
    }

    /* renamed from: r */
    public static void m56030r(long[] jArr, int i, int i2) {
        int i3 = i + (i2 >>> 6);
        jArr[i3] = jArr[i3] ^ (1 << (i2 & 63));
    }

    /* renamed from: t */
    public static void m56031t(long[] jArr, int i, long[] jArr2, int i2, int i3, int i4) {
        int i5 = i + (i4 >>> 6);
        int i6 = i4 & 63;
        if (i6 == 0) {
            m56024a(jArr, i5, jArr2, i2, i3);
            return;
        }
        jArr[i5] = m56027i(jArr, i5 + 1, jArr2, i2, i3, 64 - i6) ^ jArr[i5];
    }

    /* renamed from: u */
    public static void m56032u(long[] jArr, int i, int i2, long j) {
        int i3 = i + (i2 >>> 6);
        int i4 = i2 & 63;
        if (i4 == 0) {
            jArr[i3] = jArr[i3] ^ j;
            return;
        }
        jArr[i3] = jArr[i3] ^ (j << i4);
        long j2 = j >>> (64 - i4);
        if (j2 != 0) {
            int i5 = i3 + 1;
            jArr[i5] = j2 ^ jArr[i5];
        }
    }

    /* renamed from: x */
    public static long m56033x(int i) {
        short[] sArr = f36894d;
        short s = sArr[i & 255] | (sArr[(i >>> 8) & 255] << 16);
        short s2 = sArr[(i >>> 16) & 255];
        return (((long) s) & 4294967295L) | ((((long) ((sArr[i >>> 24] << 16) | s2)) & 4294967295L) << 32);
    }

    /* renamed from: B */
    public bl3 mo50620B(int i, int[] iArr) {
        int o = mo50637o();
        if (o != 0) {
            int i2 = 1;
            if (o == 1) {
                return this;
            }
            int i3 = (i + 63) >>> 6;
            bl3 bl3 = new bl3(i3);
            m56014I(bl3.f36900a, 0, i, i, iArr);
            bl3 bl32 = new bl3(i3);
            bl32.f36900a[0] = 1;
            bl3 bl33 = new bl3(i3);
            int i4 = i + 1;
            int[] iArr2 = {o, i4};
            bl3[] bl3Arr = {(bl3) clone(), bl3};
            int[] iArr3 = {1, 0};
            bl3[] bl3Arr2 = {bl32, bl33};
            int i5 = iArr3[1];
            int i6 = i4 - o;
            while (true) {
                if (i6 < 0) {
                    i6 = -i6;
                    iArr2[i2] = i4;
                    iArr3[i2] = i5;
                    int i7 = 1 - i2;
                    int i8 = iArr2[i7];
                    int i9 = iArr3[i7];
                    i2 = i7;
                    i4 = i8;
                    i5 = i9;
                }
                int i10 = 1 - i2;
                bl3Arr[i2].mo50633g(bl3Arr[i10], iArr2[i10], i6);
                int p = bl3Arr[i2].mo50638p(i4);
                if (p == 0) {
                    return bl3Arr2[i10];
                }
                int i11 = iArr3[i10];
                bl3Arr2[i2].mo50633g(bl3Arr2[i10], i11, i6);
                int i12 = i11 + i6;
                if (i12 > i5) {
                    i5 = i12;
                } else if (i12 == i5) {
                    i5 = bl3Arr2[i2].mo50638p(i5);
                }
                i6 += p - i4;
                i4 = p;
            }
        } else {
            throw new IllegalStateException();
        }
    }

    /* renamed from: C */
    public bl3 mo50621C(bl3 bl3, int i, int[] iArr) {
        int i2;
        int i3;
        bl3 bl32;
        bl3 bl33;
        int i4;
        long[] jArr;
        int i5;
        int i6 = i;
        int[] iArr2 = iArr;
        int o = mo50637o();
        if (o == 0) {
            return this;
        }
        int o2 = bl3.mo50637o();
        if (o2 == 0) {
            return bl3;
        }
        if (o > o2) {
            i2 = o;
            i3 = o2;
            bl33 = this;
            bl32 = bl3;
        } else {
            i3 = o;
            i2 = o2;
            bl32 = this;
            bl33 = bl3;
        }
        int i7 = (i3 + 63) >>> 6;
        int i8 = (i2 + 63) >>> 6;
        int i9 = ((i3 + i2) + 62) >>> 6;
        if (i7 == 1) {
            long j = bl32.f36900a[0];
            if (j == 1) {
                return bl33;
            }
            long[] jArr2 = new long[i9];
            m56013G(j, bl33.f36900a, i8, jArr2, 0);
            return m56017L(jArr2, 0, i9, i6, iArr2);
        }
        int i10 = ((i2 + 7) + 63) >>> 6;
        int[] iArr3 = new int[16];
        int i11 = i10 << 4;
        long[] jArr3 = new long[i11];
        iArr3[1] = i10;
        System.arraycopy(bl33.f36900a, 0, jArr3, i10, i8);
        int i12 = 2;
        int i13 = i10;
        for (int i14 = 16; i12 < i14; i14 = 16) {
            i13 += i10;
            iArr3[i12] = i13;
            if ((i12 & 1) == 0) {
                jArr = jArr3;
                i5 = i11;
                m56021R(jArr3, i13 >>> 1, jArr3, i13, i10, 1);
            } else {
                jArr = jArr3;
                i5 = i11;
                m56025b(jArr, i10, jArr3, i13 - i10, jArr, i13, i10);
            }
            i12++;
            i11 = i5;
            jArr3 = jArr;
        }
        long[] jArr4 = jArr3;
        int i15 = i11;
        long[] jArr5 = new long[i15];
        m56021R(jArr4, 0, jArr5, 0, i15, 4);
        long[] jArr6 = bl32.f36900a;
        int i16 = i9 << 3;
        long[] jArr7 = new long[i16];
        int i17 = 0;
        while (i17 < i7) {
            long j2 = jArr6[i17];
            int i18 = i17;
            while (true) {
                long j3 = j2 >>> 4;
                i4 = i17;
                m56026d(jArr7, i18, jArr4, iArr3[((int) j2) & 15], jArr5, iArr3[((int) j3) & 15], i10);
                j2 = j3 >>> 4;
                if (j2 == 0) {
                    break;
                }
                i18 += i9;
                i17 = i4;
            }
            i17 = i4 + 1;
        }
        while (true) {
            i16 -= i9;
            if (i16 == 0) {
                return m56017L(jArr7, 0, i9, i6, iArr2);
            }
            m56028j(jArr7, i16 - i9, jArr7, i16, i9, 8);
        }
    }

    /* renamed from: D */
    public bl3 mo50622D(int i, int[] iArr) {
        int v = mo50640v();
        if (v == 0) {
            return this;
        }
        int i2 = v << 1;
        long[] jArr = new long[i2];
        int i3 = 0;
        while (i3 < i2) {
            long j = this.f36900a[i3 >>> 1];
            int i4 = i3 + 1;
            jArr[i3] = m56033x((int) j);
            i3 = i4 + 1;
            jArr[i4] = m56033x((int) (j >>> 32));
        }
        return new bl3(jArr, 0, m56016K(jArr, 0, i2, i, iArr));
    }

    /* renamed from: E */
    public bl3 mo50623E(int i, int i2, int[] iArr) {
        int v = mo50640v();
        if (v == 0) {
            return this;
        }
        int i3 = ((i2 + 63) >>> 6) << 1;
        long[] jArr = new long[i3];
        System.arraycopy(this.f36900a, 0, jArr, 0, v);
        while (true) {
            i--;
            if (i < 0) {
                return new bl3(jArr, 0, v);
            }
            m56022T(jArr, v, i2, iArr);
            v = m56016K(jArr, 0, i3, i2, iArr);
        }
    }

    /* renamed from: F */
    public bl3 mo50624F(bl3 bl3, int i, int[] iArr) {
        int i2;
        int i3;
        bl3 bl32;
        bl3 bl33;
        long[] jArr;
        int i4;
        int o = mo50637o();
        if (o == 0) {
            return this;
        }
        int o2 = bl3.mo50637o();
        if (o2 == 0) {
            return bl3;
        }
        if (o > o2) {
            i2 = o;
            i3 = o2;
            bl33 = this;
            bl32 = bl3;
        } else {
            i3 = o;
            i2 = o2;
            bl32 = this;
            bl33 = bl3;
        }
        int i5 = (i3 + 63) >>> 6;
        int i6 = (i2 + 63) >>> 6;
        int i7 = ((i3 + i2) + 62) >>> 6;
        if (i5 == 1) {
            long j = bl32.f36900a[0];
            if (j == 1) {
                return bl33;
            }
            long[] jArr2 = new long[i7];
            m56013G(j, bl33.f36900a, i6, jArr2, 0);
            return new bl3(jArr2, 0, i7);
        }
        int i8 = ((i2 + 7) + 63) >>> 6;
        int[] iArr2 = new int[16];
        int i9 = i8 << 4;
        long[] jArr3 = new long[i9];
        iArr2[1] = i8;
        System.arraycopy(bl33.f36900a, 0, jArr3, i8, i6);
        int i10 = 2;
        int i11 = i8;
        for (int i12 = 16; i10 < i12; i12 = 16) {
            i11 += i8;
            iArr2[i10] = i11;
            if ((i10 & 1) == 0) {
                jArr = jArr3;
                i4 = i9;
                m56021R(jArr3, i11 >>> 1, jArr3, i11, i8, 1);
            } else {
                jArr = jArr3;
                i4 = i9;
                m56025b(jArr, i8, jArr, i11 - i8, jArr3, i11, i8);
            }
            i10++;
            i9 = i4;
            jArr3 = jArr;
        }
        long[] jArr4 = jArr3;
        int i13 = i9;
        long[] jArr5 = new long[i13];
        m56021R(jArr4, 0, jArr5, 0, i13, 4);
        long[] jArr6 = bl32.f36900a;
        int i14 = i7 << 3;
        long[] jArr7 = new long[i14];
        for (int i15 = 0; i15 < i5; i15++) {
            long j2 = jArr6[i15];
            int i16 = i15;
            while (true) {
                long j3 = j2 >>> 4;
                m56026d(jArr7, i16, jArr4, iArr2[((int) j2) & 15], jArr5, iArr2[((int) j3) & 15], i8);
                j2 = j3 >>> 4;
                if (j2 == 0) {
                    break;
                }
                i16 += i7;
            }
        }
        while (true) {
            i14 -= i7;
            if (i14 == 0) {
                return new bl3(jArr7, 0, i7);
            }
            m56028j(jArr7, i14 - i7, jArr7, i14, i7, 8);
        }
    }

    /* renamed from: H */
    public void mo50625H(int i, int[] iArr) {
        long[] jArr = this.f36900a;
        int K = m56016K(jArr, 0, jArr.length, i, iArr);
        if (K < jArr.length) {
            long[] jArr2 = new long[K];
            this.f36900a = jArr2;
            System.arraycopy(jArr, 0, jArr2, 0, K);
        }
    }

    /* renamed from: P */
    public final long[] mo50626P(int i) {
        long[] jArr = new long[i];
        long[] jArr2 = this.f36900a;
        System.arraycopy(jArr2, 0, jArr, 0, Math.min(jArr2.length, i));
        return jArr;
    }

    /* renamed from: S */
    public bl3 mo50627S(int i, int[] iArr) {
        int v = mo50640v();
        if (v == 0) {
            return this;
        }
        int i2 = v << 1;
        long[] jArr = new long[i2];
        int i3 = 0;
        while (i3 < i2) {
            long j = this.f36900a[i3 >>> 1];
            int i4 = i3 + 1;
            jArr[i3] = m56033x((int) j);
            i3 = i4 + 1;
            jArr[i4] = m56033x((int) (j >>> 32));
        }
        return new bl3(jArr, 0, i2);
    }

    /* renamed from: V */
    public boolean mo50628V() {
        long[] jArr = this.f36900a;
        return jArr.length > 0 && (1 & jArr[0]) != 0;
    }

    /* renamed from: Y */
    public BigInteger mo50629Y() {
        int v = mo50640v();
        if (v == 0) {
            return tl1.f44771a;
        }
        int i = v - 1;
        long j = this.f36900a[i];
        byte[] bArr = new byte[8];
        int i2 = 0;
        boolean z = false;
        for (int i3 = 7; i3 >= 0; i3--) {
            byte b = (byte) ((int) (j >>> (i3 * 8)));
            if (z || b != 0) {
                bArr[i2] = b;
                i2++;
                z = true;
            }
        }
        byte[] bArr2 = new byte[((i * 8) + i2)];
        for (int i4 = 0; i4 < i2; i4++) {
            bArr2[i4] = bArr[i4];
        }
        for (int i5 = v - 2; i5 >= 0; i5--) {
            long j2 = this.f36900a[i5];
            int i6 = 7;
            while (i6 >= 0) {
                bArr2[i2] = (byte) ((int) (j2 >>> (i6 * 8)));
                i6--;
                i2++;
            }
        }
        return new BigInteger(1, bArr2);
    }

    public Object clone() {
        return new bl3(C9367tq.m72424h(this.f36900a));
    }

    public boolean equals(Object obj) {
        if (!(obj instanceof bl3)) {
            return false;
        }
        bl3 bl3 = (bl3) obj;
        int v = mo50640v();
        if (bl3.mo50640v() != v) {
            return false;
        }
        for (int i = 0; i < v; i++) {
            if (this.f36900a[i] != bl3.f36900a[i]) {
                return false;
            }
        }
        return true;
    }

    /* renamed from: f */
    public bl3 mo50632f() {
        if (this.f36900a.length == 0) {
            return new bl3(new long[]{1});
        }
        long[] P = mo50626P(Math.max(1, mo50640v()));
        P[0] = 1 ^ P[0];
        return new bl3(P);
    }

    /* renamed from: g */
    public final void mo50633g(bl3 bl3, int i, int i2) {
        int i3 = (i + 63) >>> 6;
        int i4 = i2 >>> 6;
        int i5 = i2 & 63;
        if (i5 == 0) {
            m56024a(this.f36900a, i4, bl3.f36900a, 0, i3);
            return;
        }
        long j = m56028j(this.f36900a, i4, bl3.f36900a, 0, i3, i5);
        if (j != 0) {
            long[] jArr = this.f36900a;
            int i6 = i3 + i4;
            jArr[i6] = j ^ jArr[i6];
        }
    }

    /* renamed from: h */
    public void mo50634h(bl3 bl3, int i) {
        int v = bl3.mo50640v();
        if (v != 0) {
            int i2 = v + i;
            if (i2 > this.f36900a.length) {
                this.f36900a = mo50626P(i2);
            }
            m56024a(this.f36900a, i, bl3.f36900a, 0, v);
        }
    }

    public int hashCode() {
        int v = mo50640v();
        int i = 1;
        for (int i2 = 0; i2 < v; i2++) {
            long j = this.f36900a[i2];
            i = (((i * 31) ^ ((int) j)) * 31) ^ ((int) (j >>> 32));
        }
        return i;
    }

    /* renamed from: m */
    public void mo50636m(long[] jArr, int i) {
        long[] jArr2 = this.f36900a;
        System.arraycopy(jArr2, 0, jArr, i, jArr2.length);
    }

    /* renamed from: o */
    public int mo50637o() {
        int length = this.f36900a.length;
        while (length != 0) {
            length--;
            long j = this.f36900a[length];
            if (j != 0) {
                return (length << 6) + m56029l(j);
            }
        }
        return 0;
    }

    /* renamed from: p */
    public final int mo50638p(int i) {
        int i2 = (i + 62) >>> 6;
        while (i2 != 0) {
            i2--;
            long j = this.f36900a[i2];
            if (j != 0) {
                return (i2 << 6) + m56029l(j);
            }
        }
        return 0;
    }

    public String toString() {
        int v = mo50640v();
        if (v == 0) {
            return "0";
        }
        int i = v - 1;
        StringBuffer stringBuffer = new StringBuffer(Long.toBinaryString(this.f36900a[i]));
        while (true) {
            i--;
            if (i < 0) {
                return stringBuffer.toString();
            }
            String binaryString = Long.toBinaryString(this.f36900a[i]);
            int length = binaryString.length();
            if (length < 64) {
                stringBuffer.append("0000000000000000000000000000000000000000000000000000000000000000".substring(length));
            }
            stringBuffer.append(binaryString);
        }
    }

    /* renamed from: v */
    public int mo50640v() {
        return mo50641w(this.f36900a.length);
    }

    /* renamed from: w */
    public int mo50641w(int i) {
        long[] jArr = this.f36900a;
        int min = Math.min(i, jArr.length);
        if (min < 1) {
            return 0;
        }
        if (jArr[0] != 0) {
            do {
                min--;
            } while (jArr[min] == 0);
            return min + 1;
        }
        do {
            min--;
            if (jArr[min] != 0) {
                return min + 1;
            }
        } while (min > 0);
        return 0;
    }

    /* renamed from: y */
    public boolean mo50642y() {
        long[] jArr = this.f36900a;
        if (jArr[0] != 1) {
            return false;
        }
        for (int i = 1; i < jArr.length; i++) {
            if (jArr[i] != 0) {
                return false;
            }
        }
        return true;
    }

    /* renamed from: z */
    public boolean mo50643z() {
        long[] jArr = this.f36900a;
        for (long j : jArr) {
            if (j != 0) {
                return false;
            }
        }
        return true;
    }
}
